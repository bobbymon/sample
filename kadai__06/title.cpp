/*******************************************************************************
* タイトル:		titleプログラム
* プログラム名:	title.cpp
* 作成者:		GP11B341 01 飯塚春輝
* 作成日:		2018/06/29
********************************************************************************

/***************************************************************************
* インクルードファイル****
*******************************************************************************/
#include "main.h"
#include "title.h"


/*******************************************************************************
* マクロ定義
*******************************************************************************/



/*******************************************************************************
* 構造体定義
*******************************************************************************/



/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/



/*******************************************************************************
* グローバル変数
*******************************************************************************/



/*******************************************************************************
関数名:	void InitTitle( void )
引数:	void
戻り値:	void
説明:	titleの初期化処理
*******************************************************************************/
void InitTitle(void)
{

}


/*******************************************************************************
関数名:	void UpdateTitle( void )
引数:	void
戻り値:	void
説明:	titleの更新処理
*******************************************************************************/
void UpdateTitle(void)
{

}


/*******************************************************************************
関数名:	void DrawTitle( void )
引数:	void
戻り値:	void
説明:	titleの描画処理
*******************************************************************************/
void DrawTitle(void)
{
	void zukei1(void);
	{
		int i, j;
		for (i = 0; i < 2; i++)
		{
			for (j = 0; j < 79; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}


	void zukei2(void);
	{
		int i, j;
		for (i = 0; i < 2; i++)
		{
			for (j = 0; j < 20; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 51; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}

	void zukei3(void);
	{
		int i, j;
		for (i = 0; i < 2; i++)
		{
			for (j = 0; j < 14; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 5; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 20; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 26; j++)
			{
				printf("#");
				Sleep(1);
			}

			printf("\n");
		}
	}

	void zukei4(void);
	{
		int i, j;
		for (i = 0; i < 1; i++)
		{
			for (j = 0; j < 14; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 5; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 12; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 11; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 26; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}

	void zukei5(void);
	{
		int i, j;
		for (i = 0; i < 1; i++)
		{
			for (j = 0; j < 11; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 8; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 5; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 9; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 20; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}

	void zukei6(void);
	{
		int i, j;
		for (i = 0; i < 1; i++)
		{
			for (j = 0; j < 11; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 8; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 6; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 9; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 26; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}

	void zukei7(void);
	{
		int i, j;
		for (i = 0; i < 1; i++)
		{
			for (j = 0; j < 11; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 8; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 8; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 7; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 5; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 26; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}

	void zukei8(void);
	{
		int i, j;
		for (i = 0; i < 1; i++)
		{
			for (j = 0; j < 11; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 8; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 8; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 5; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 2; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 7; j++)
			{
				printf("#");
				Sleep(1);
			}
			for (j = 0; j < 3; j++)
			{
				printf(" ");
				Sleep(1);
			}
			for (j = 0; j < 26; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}

	void zukei1(void);
	{
		int i, j;
		for (i = 0; i < 1; i++)
		{
			for (j = 0; j < 79; j++)
			{
				printf("#");
				Sleep(1);
			}
			printf("\n");
		}
	}


	char title[TATE_MAX][YOKO_MAX] = {
		"                                                                              \n",
		"                                                                              \n",
		"            ###########     ###       ##    ##########     #########          \n",
		"                ###                   ##           ###     ###    ##          \n",
		"            ###########              ##            ###     #########          \n",
		"                ###                 ##          ###        ###    ##  ######  \n",
		"                ###              ###         ###   ###            ##          \n",
		"                ######     ######         ###        ###        ##            \n",
		"                                                              ##              \n",
		"                                                                              \n",
		"                                                                              \n",
		"                                                                              \n",
		"                             touch the any key                                \n",
	};
	int i = 0;
	int y;

		for (y = 0; y < TATE_MAX; y++)
		{
			printf("%s", &title[y][0]);
		}
		i++;

		rewind(stdin);
		_getch();

		system("cls");

			char title2[FH_ENEMY][YOKO_MAX] = {
		"                                                                              \n",
		"                                                                              \n",
		"                                                                              \n",
		"        １ 敵を倒してレベルを上げよう！                                       \n",
		"                                                                              \n",
		"        ２ レベルが上がるとステータスが上がるよ！                             \n",
		"                                                                              \n",
		"        ３ レベルが３以上になると・・・                        　　Ω         \n",
		" 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　（〜ﾟｰﾟ）      \n",
		" 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　´　｜         \n",
		" 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　┌┴┐       \n",
		" 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　│　｜       \n",
		"       　　　　　　　　　　　　　　　　　　　　　　　　　　　　／│／         \n",
		"       　　　　　　　　　　　　　　　　　　　　　　　　　　　　ヽ／           \n",
		"                                                                              \n",
		"                                                                              \n",
		"                                                                              \n",
		};

		for (y = 0; y < FH_ENEMY; y++)
		{
			printf("%s", &title2[y][0]);
		}
		i++;

}


/*******************************************************************************
関数名:	void UninitTitle( void )
引数:	void
戻り値:	void
説明:	Titleの終了処理
*******************************************************************************/
	void UninitTitle(void)
{
	// 現時点では特にやる事が無いっす
	// DirectXではメモリの解放等を行うっす
}
