/*******************************************************************************
* タイトル:		mainプログラム
* プログラム名:	main.cpp
* 作成者:		GP11B341 01 飯塚春輝
* 作成日:		2018/06/29
********************************************************************************

/***************************************************************************
* インクルードファイル****
*******************************************************************************/
#include "main.h"
#include "player.h"
#include "enemy.h"
#include "title.h"
#include "bg.h"
#include"batoru.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/



/*******************************************************************************
* 構造体定義
*******************************************************************************/



/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/


/*******************************************************************************
* グローバル変数
*******************************************************************************/


/*******************************************************************************
関数名:	int main( void )
引数:	void
戻り値:	正常終了: int型の 0
説明:	メイン関数
*******************************************************************************/
int main(void)
{

	/* ランダム用初期設定 */
	srand((unsigned)time(NULL));

	// 各種初期化処理
	InitPlayer();				// プレイヤーの初期化処理
	InitEnemy();				// エネミーの初期化処理

	DrawTitle();				// タイトル描画

								// ゲームループ開始
	while (1)
	{
		// 何かキー入力があったら処理を行う
		if (_kbhit())
		{
			// 各種更新処理
			UpdatePlayer();		// プレイヤーの更新処理
			UpdateEnemy();		// エネミーの更新処理
								// 各種描画処理
			DrawPlayer();		// プレイヤーを描画する為に位置をセット
			DrawEnemy();		// エネミーを描画する為に位置をセット
			DrawBG();			// BG描画 (背景描画)
		}

		/* 処理速度調整 */
		Sleep(100);
	}

	rewind(stdin);
	getchar();

	// 各種終了処理
	UninitPlayer();				// プレイヤーの終了処理
	UninitEnemy();				// エネミーの終了処理

	return 0;

}




